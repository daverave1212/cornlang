
[DONE] automatically put a ; at the end of the line, no matter what

[DONE] import copy pastes code


[DONE] class		puts "{" at the end of the line
			checks for last word on the line and adds it to the tree as a CLASSNAME
[DONE] primitives have a PRIMITIVE to them
[DONE] if			becomes "if(" and puts "){" at the end of the line

[DONE] .			if the previous word is was a class, becomes ::
			else becomes ->

[DONE] public		becomes public:
[DONE] private		becomes private:
[DONE] [FIXED!] static	ATTRIBUTES	records all line until it finds a word with no data in the tree

	public static Object<Object> ob = new Object<Object>()
	
	public: static Object<Object> ob;
	...
	Object<Object> CLASS::ob = new Object<Object>();
[DONE] static METHODS

for(int i = ceva1 : ceva2)
for( INT i = ceva1; i <= ceva2; i++	)
	

[SKIPPED] if previous word was "template", append "class" to it

[SKIPPED]	function definitions:
		int myFunction()
	
	
[NEEDS TESTING] Objects and pointers:
	Add a "*" after an object definition when:
		If not function
			At first occurence of an object, mark the line (NOT ARRAY OR MATRIX THOUGH)
				At first occurence of "=" or "does", previous previous word appends "*"
		If function
			At occurence of an object on the same level
				If next character is <
					Find the end > on the same level and append *
				Else
					Append *
				
			
			








